type ShaderGradientCanvasContext = {
    envBasePath: string;
};
declare const useShaderGradientCanvasContext: () => ShaderGradientCanvasContext;
declare function ShaderGradientCanvas({ children, style, pixelDensity, fov, pointerEvents, className, envBasePath, lazyLoad, threshold, }: {
    children: React.ReactNode;
    style?: React.CSSProperties;
    pixelDensity?: number;
    fov?: number;
    pointerEvents?: 'none' | 'auto';
    className?: string;
    envBasePath?: string;
    lazyLoad?: boolean;
    threshold?: number;
}): JSX.Element;

type ShaderGradientType = 'plane' | 'waterPlane' | 'sphere';
interface Position {
    positionX: number;
    positionY: number;
    positionZ: number;
}
interface Rotation {
    rotationX: number;
    rotationY: number;
    rotationZ: number;
}
type typeT = 'plane' | 'sphere' | 'waterPlane';
type animateT = 'on' | 'off';
type MeshT = {
    type?: typeT;
    animate?: animateT;
    uTime?: number;
    uSpeed?: number;
    uStrength?: number;
    uDensity?: number;
    uFrequency?: number;
    uAmplitude?: number;
    positionX?: number;
    positionY?: number;
    positionZ?: number;
    rotationX?: number;
    rotationY?: number;
    rotationZ?: number;
    color1?: string;
    color2?: string;
    color3?: string;
    reflection?: number;
    wireframe?: boolean;
    shader?: string;
    rotSpringOption?: any;
    posSpringOption?: any;
};
type LightTypeT = '3d' | 'env';
type EnvironmentPresetT = 'city' | 'dawn' | 'lobby';
type LightsT = {
    lightType: LightTypeT;
    brightness: number;
    envPreset: EnvironmentPresetT;
};
type GradientT = MeshT & {
    control?: 'query' | 'props';
    isFigmaPlugin?: boolean;
    smoothTime?: number;
    cAzimuthAngle?: number;
    cPolarAngle?: number;
    cDistance?: number;
    cameraZoom?: number;
    lightType?: LightTypeT;
    brightness?: number;
    envPreset?: EnvironmentPresetT;
    grain?: 'on' | 'off';
    grainBlending?: number;
    zoomOut?: boolean;
    toggleAxis?: boolean;
    hoverState?: string;
    enableTransition?: boolean;
    urlString?: string;
};

declare function ShaderGradient(passedProps: GradientT): JSX.Element;

declare const presets: {
    halo: {
        title: string;
        color: string;
        props: {
            type: typeT;
            uAmplitude: number;
            uDensity: number;
            uSpeed: number;
            uStrength: number;
            uTime: number;
            uFrequency: number;
            range: string;
            rangeStart: number;
            rangeEnd: number;
            frameRate: number;
            destination: string;
            format: string;
            axesHelper: string;
            brightness: number;
            cAzimuthAngle: number;
            cDistance: number;
            cPolarAngle: number;
            cameraZoom: number;
            color1: string;
            color2: string;
            color3: string;
            embedMode: string;
            envPreset: EnvironmentPresetT;
            gizmoHelper: string;
            grain: string;
            lightType: LightTypeT;
            pixelDensity: number;
            fov: number;
            positionX: number;
            positionY: number;
            positionZ: number;
            reflection: number;
            rotationX: number;
            rotationY: number;
            rotationZ: number;
            shader: string;
            animate: animateT;
            wireframe: boolean;
        };
    };
    pensive: {
        title: string;
        color: string;
        props: {
            range: string;
            rangeStart: number;
            rangeEnd: number;
            frameRate: number;
            destination: string;
            format: string;
            animate: string;
            axesHelper: string;
            brightness: number;
            cAzimuthAngle: number;
            cDistance: number;
            cPolarAngle: number;
            cameraZoom: number;
            color1: string;
            color2: string;
            color3: string;
            embedMode: string;
            envPreset: string;
            gizmoHelper: string;
            grain: string;
            lightType: string;
            pixelDensity: number;
            fov: number;
            positionX: number;
            positionY: number;
            positionZ: number;
            reflection: number;
            rotationX: number;
            rotationY: number;
            rotationZ: number;
            shader: string;
            type: string;
            uAmplitude: number;
            uDensity: number;
            uFrequency: number;
            uSpeed: number;
            uStrength: number;
            uTime: number;
            wireframe: boolean;
        };
    };
    mint: {
        title: string;
        color: string;
        props: {
            range: string;
            rangeStart: number;
            rangeEnd: number;
            frameRate: number;
            destination: string;
            format: string;
            animate: string;
            axesHelper: string;
            brightness: number;
            cAzimuthAngle: number;
            cDistance: number;
            cPolarAngle: number;
            cameraZoom: number;
            color1: string;
            color2: string;
            color3: string;
            embedMode: string;
            envPreset: string;
            gizmoHelper: string;
            grain: string;
            lightType: string;
            pixelDensity: number;
            fov: number;
            positionX: number;
            positionY: number;
            positionZ: number;
            reflection: number;
            rotationX: number;
            rotationY: number;
            rotationZ: number;
            shader: string;
            type: string;
            uAmplitude: number;
            uDensity: number;
            uFrequency: number;
            uSpeed: number;
            uStrength: number;
            uTime: number;
            wireframe: boolean;
        };
    };
    interstella: {
        title: string;
        color: string;
        props: {
            range: string;
            rangeStart: number;
            rangeEnd: number;
            frameRate: number;
            destination: string;
            format: string;
            animate: string;
            axesHelper: string;
            brightness: number;
            cAzimuthAngle: number;
            cDistance: number;
            cPolarAngle: number;
            cameraZoom: number;
            color1: string;
            color2: string;
            color3: string;
            embedMode: string;
            envPreset: string;
            gizmoHelper: string;
            grain: string;
            lightType: string;
            pixelDensity: number;
            fov: number;
            positionX: number;
            positionY: number;
            positionZ: number;
            reflection: number;
            rotationX: number;
            rotationY: number;
            rotationZ: number;
            shader: string;
            type: string;
            uAmplitude: number;
            uDensity: number;
            uFrequency: number;
            uSpeed: number;
            uStrength: number;
            uTime: number;
            wireframe: boolean;
        };
    };
    nightyNight: {
        title: string;
        color: string;
        props: {
            range: string;
            rangeStart: number;
            rangeEnd: number;
            frameRate: number;
            destination: string;
            format: string;
            animate: string;
            axesHelper: string;
            brightness: number;
            cAzimuthAngle: number;
            cDistance: number;
            cPolarAngle: number;
            cameraZoom: number;
            color1: string;
            color2: string;
            color3: string;
            embedMode: string;
            envPreset: string;
            gizmoHelper: string;
            grain: string;
            lightType: string;
            pixelDensity: number;
            fov: number;
            positionX: number;
            positionY: number;
            positionZ: number;
            reflection: number;
            rotationX: number;
            rotationY: number;
            rotationZ: number;
            shader: string;
            type: string;
            uAmplitude: number;
            uDensity: number;
            uFrequency: number;
            uSpeed: number;
            uStrength: number;
            uTime: number;
            wireframe: boolean;
        };
    };
    violaOrientalis: {
        title: string;
        color: string;
        props: {
            range: string;
            rangeStart: number;
            rangeEnd: number;
            frameRate: number;
            destination: string;
            format: string;
            animate: string;
            axesHelper: string;
            brightness: number;
            cAzimuthAngle: number;
            cDistance: number;
            cPolarAngle: number;
            cameraZoom: number;
            color1: string;
            color2: string;
            color3: string;
            embedMode: string;
            envPreset: string;
            grain: string;
            lightType: string;
            pixelDensity: number;
            fov: number;
            positionX: number;
            positionY: number;
            positionZ: number;
            reflection: number;
            rotationX: number;
            rotationY: number;
            rotationZ: number;
            shader: string;
            type: string;
            uAmplitude: number;
            uDensity: number;
            uSpeed: number;
            uStrength: number;
            uTime: number;
            uFrequency: number;
            wireframe: boolean;
        };
    };
    universe: {
        title: string;
        color: string;
        props: {
            range: string;
            rangeStart: number;
            rangeEnd: number;
            frameRate: number;
            destination: string;
            format: string;
            animate: string;
            axesHelper: string;
            brightness: number;
            cAzimuthAngle: number;
            cDistance: number;
            cPolarAngle: number;
            cameraZoom: number;
            color1: string;
            color2: string;
            color3: string;
            embedMode: string;
            envPreset: string;
            grain: string;
            lightType: string;
            pixelDensity: number;
            fov: number;
            positionX: number;
            positionY: number;
            positionZ: number;
            reflection: number;
            rotationX: number;
            rotationY: number;
            rotationZ: number;
            shader: string;
            type: string;
            uAmplitude: number;
            uDensity: number;
            uSpeed: number;
            uStrength: number;
            uTime: number;
            uFrequency: number;
            wireframe: boolean;
        };
    };
    sunset: {
        title: string;
        color: string;
        props: {
            range: string;
            rangeStart: number;
            rangeEnd: number;
            frameRate: number;
            destination: string;
            format: string;
            animate: string;
            axesHelper: string;
            bgColor1: string;
            bgColor2: string;
            brightness: number;
            cAzimuthAngle: number;
            cDistance: number;
            cPolarAngle: number;
            cameraZoom: number;
            color1: string;
            color2: string;
            color3: string;
            embedMode: string;
            envPreset: string;
            grain: string;
            lightType: string;
            pixelDensity: number;
            fov: number;
            positionX: number;
            positionY: number;
            positionZ: number;
            reflection: number;
            rotationX: number;
            rotationY: number;
            rotationZ: number;
            shader: string;
            type: string;
            uAmplitude: number;
            uDensity: number;
            uSpeed: number;
            uStrength: number;
            uTime: number;
            uFrequency: number;
            wireframe: boolean;
        };
    };
    mandarin: {
        title: string;
        color: string;
        props: {
            range: string;
            rangeStart: number;
            rangeEnd: number;
            frameRate: number;
            destination: string;
            format: string;
            animate: string;
            axesHelper: string;
            bgColor1: string;
            bgColor2: string;
            brightness: number;
            cAzimuthAngle: number;
            cDistance: number;
            cPolarAngle: number;
            cameraZoom: number;
            color1: string;
            color2: string;
            color3: string;
            embedMode: string;
            envPreset: string;
            grain: string;
            lightType: string;
            pixelDensity: number;
            fov: number;
            positionX: number;
            positionY: number;
            positionZ: number;
            reflection: number;
            rotationX: number;
            rotationY: number;
            rotationZ: number;
            shader: string;
            type: string;
            uAmplitude: number;
            uDensity: number;
            uSpeed: number;
            uStrength: number;
            uTime: number;
            uFrequency: number;
            wireframe: boolean;
        };
    };
    cottonCandy: {
        title: string;
        color: string;
        props: {
            range: string;
            rangeStart: number;
            rangeEnd: number;
            frameRate: number;
            destination: string;
            format: string;
            animate: string;
            axesHelper: string;
            brightness: number;
            cAzimuthAngle: number;
            cDistance: number;
            cPolarAngle: number;
            cameraZoom: number;
            color1: string;
            color2: string;
            color3: string;
            embedMode: string;
            envPreset: string;
            grain: string;
            lightType: string;
            pixelDensity: number;
            fov: number;
            positionX: number;
            positionY: number;
            positionZ: number;
            reflection: number;
            rotationX: number;
            rotationY: number;
            rotationZ: number;
            shader: string;
            type: string;
            uAmplitude: number;
            uDensity: number;
            uSpeed: number;
            uStrength: number;
            uTime: number;
            uFrequency: number;
            wireframe: boolean;
        };
    };
};
declare const initialActivePreset = 0;
declare const presetsArray: ({
    title: string;
    color: string;
    props: {
        type: typeT;
        uAmplitude: number;
        uDensity: number;
        uSpeed: number;
        uStrength: number;
        uTime: number;
        uFrequency: number;
        range: string;
        rangeStart: number;
        rangeEnd: number;
        frameRate: number;
        destination: string;
        format: string;
        axesHelper: string;
        brightness: number;
        cAzimuthAngle: number;
        cDistance: number;
        cPolarAngle: number;
        cameraZoom: number;
        color1: string;
        color2: string;
        color3: string;
        embedMode: string;
        envPreset: EnvironmentPresetT;
        gizmoHelper: string;
        grain: string;
        lightType: LightTypeT;
        pixelDensity: number;
        fov: number;
        positionX: number;
        positionY: number;
        positionZ: number;
        reflection: number;
        rotationX: number;
        rotationY: number;
        rotationZ: number;
        shader: string;
        animate: animateT;
        wireframe: boolean;
    };
} | {
    title: string;
    color: string;
    props: {
        range: string;
        rangeStart: number;
        rangeEnd: number;
        frameRate: number;
        destination: string;
        format: string;
        animate: string;
        axesHelper: string;
        brightness: number;
        cAzimuthAngle: number;
        cDistance: number;
        cPolarAngle: number;
        cameraZoom: number;
        color1: string;
        color2: string;
        color3: string;
        embedMode: string;
        envPreset: string;
        gizmoHelper: string;
        grain: string;
        lightType: string;
        pixelDensity: number;
        fov: number;
        positionX: number;
        positionY: number;
        positionZ: number;
        reflection: number;
        rotationX: number;
        rotationY: number;
        rotationZ: number;
        shader: string;
        type: string;
        uAmplitude: number;
        uDensity: number;
        uFrequency: number;
        uSpeed: number;
        uStrength: number;
        uTime: number;
        wireframe: boolean;
    };
} | {
    title: string;
    color: string;
    props: {
        range: string;
        rangeStart: number;
        rangeEnd: number;
        frameRate: number;
        destination: string;
        format: string;
        animate: string;
        axesHelper: string;
        brightness: number;
        cAzimuthAngle: number;
        cDistance: number;
        cPolarAngle: number;
        cameraZoom: number;
        color1: string;
        color2: string;
        color3: string;
        embedMode: string;
        envPreset: string;
        gizmoHelper: string;
        grain: string;
        lightType: string;
        pixelDensity: number;
        fov: number;
        positionX: number;
        positionY: number;
        positionZ: number;
        reflection: number;
        rotationX: number;
        rotationY: number;
        rotationZ: number;
        shader: string;
        type: string;
        uAmplitude: number;
        uDensity: number;
        uFrequency: number;
        uSpeed: number;
        uStrength: number;
        uTime: number;
        wireframe: boolean;
    };
} | {
    title: string;
    color: string;
    props: {
        range: string;
        rangeStart: number;
        rangeEnd: number;
        frameRate: number;
        destination: string;
        format: string;
        animate: string;
        axesHelper: string;
        brightness: number;
        cAzimuthAngle: number;
        cDistance: number;
        cPolarAngle: number;
        cameraZoom: number;
        color1: string;
        color2: string;
        color3: string;
        embedMode: string;
        envPreset: string;
        gizmoHelper: string;
        grain: string;
        lightType: string;
        pixelDensity: number;
        fov: number;
        positionX: number;
        positionY: number;
        positionZ: number;
        reflection: number;
        rotationX: number;
        rotationY: number;
        rotationZ: number;
        shader: string;
        type: string;
        uAmplitude: number;
        uDensity: number;
        uFrequency: number;
        uSpeed: number;
        uStrength: number;
        uTime: number;
        wireframe: boolean;
    };
} | {
    title: string;
    color: string;
    props: {
        range: string;
        rangeStart: number;
        rangeEnd: number;
        frameRate: number;
        destination: string;
        format: string;
        animate: string;
        axesHelper: string;
        brightness: number;
        cAzimuthAngle: number;
        cDistance: number;
        cPolarAngle: number;
        cameraZoom: number;
        color1: string;
        color2: string;
        color3: string;
        embedMode: string;
        envPreset: string;
        gizmoHelper: string;
        grain: string;
        lightType: string;
        pixelDensity: number;
        fov: number;
        positionX: number;
        positionY: number;
        positionZ: number;
        reflection: number;
        rotationX: number;
        rotationY: number;
        rotationZ: number;
        shader: string;
        type: string;
        uAmplitude: number;
        uDensity: number;
        uFrequency: number;
        uSpeed: number;
        uStrength: number;
        uTime: number;
        wireframe: boolean;
    };
} | {
    title: string;
    color: string;
    props: {
        range: string;
        rangeStart: number;
        rangeEnd: number;
        frameRate: number;
        destination: string;
        format: string;
        animate: string;
        axesHelper: string;
        brightness: number;
        cAzimuthAngle: number;
        cDistance: number;
        cPolarAngle: number;
        cameraZoom: number;
        color1: string;
        color2: string;
        color3: string;
        embedMode: string;
        envPreset: string;
        grain: string;
        lightType: string;
        pixelDensity: number;
        fov: number;
        positionX: number;
        positionY: number;
        positionZ: number;
        reflection: number;
        rotationX: number;
        rotationY: number;
        rotationZ: number;
        shader: string;
        type: string;
        uAmplitude: number;
        uDensity: number;
        uSpeed: number;
        uStrength: number;
        uTime: number;
        uFrequency: number;
        wireframe: boolean;
    };
} | {
    title: string;
    color: string;
    props: {
        range: string;
        rangeStart: number;
        rangeEnd: number;
        frameRate: number;
        destination: string;
        format: string;
        animate: string;
        axesHelper: string;
        brightness: number;
        cAzimuthAngle: number;
        cDistance: number;
        cPolarAngle: number;
        cameraZoom: number;
        color1: string;
        color2: string;
        color3: string;
        embedMode: string;
        envPreset: string;
        grain: string;
        lightType: string;
        pixelDensity: number;
        fov: number;
        positionX: number;
        positionY: number;
        positionZ: number;
        reflection: number;
        rotationX: number;
        rotationY: number;
        rotationZ: number;
        shader: string;
        type: string;
        uAmplitude: number;
        uDensity: number;
        uSpeed: number;
        uStrength: number;
        uTime: number;
        uFrequency: number;
        wireframe: boolean;
    };
} | {
    title: string;
    color: string;
    props: {
        range: string;
        rangeStart: number;
        rangeEnd: number;
        frameRate: number;
        destination: string;
        format: string;
        animate: string;
        axesHelper: string;
        bgColor1: string;
        bgColor2: string;
        brightness: number;
        cAzimuthAngle: number;
        cDistance: number;
        cPolarAngle: number;
        cameraZoom: number;
        color1: string;
        color2: string;
        color3: string;
        embedMode: string;
        envPreset: string;
        grain: string;
        lightType: string;
        pixelDensity: number;
        fov: number;
        positionX: number;
        positionY: number;
        positionZ: number;
        reflection: number;
        rotationX: number;
        rotationY: number;
        rotationZ: number;
        shader: string;
        type: string;
        uAmplitude: number;
        uDensity: number;
        uSpeed: number;
        uStrength: number;
        uTime: number;
        uFrequency: number;
        wireframe: boolean;
    };
} | {
    title: string;
    color: string;
    props: {
        range: string;
        rangeStart: number;
        rangeEnd: number;
        frameRate: number;
        destination: string;
        format: string;
        animate: string;
        axesHelper: string;
        bgColor1: string;
        bgColor2: string;
        brightness: number;
        cAzimuthAngle: number;
        cDistance: number;
        cPolarAngle: number;
        cameraZoom: number;
        color1: string;
        color2: string;
        color3: string;
        embedMode: string;
        envPreset: string;
        grain: string;
        lightType: string;
        pixelDensity: number;
        fov: number;
        positionX: number;
        positionY: number;
        positionZ: number;
        reflection: number;
        rotationX: number;
        rotationY: number;
        rotationZ: number;
        shader: string;
        type: string;
        uAmplitude: number;
        uDensity: number;
        uSpeed: number;
        uStrength: number;
        uTime: number;
        uFrequency: number;
        wireframe: boolean;
    };
} | {
    title: string;
    color: string;
    props: {
        range: string;
        rangeStart: number;
        rangeEnd: number;
        frameRate: number;
        destination: string;
        format: string;
        animate: string;
        axesHelper: string;
        brightness: number;
        cAzimuthAngle: number;
        cDistance: number;
        cPolarAngle: number;
        cameraZoom: number;
        color1: string;
        color2: string;
        color3: string;
        embedMode: string;
        envPreset: string;
        grain: string;
        lightType: string;
        pixelDensity: number;
        fov: number;
        positionX: number;
        positionY: number;
        positionZ: number;
        reflection: number;
        rotationX: number;
        rotationY: number;
        rotationZ: number;
        shader: string;
        type: string;
        uAmplitude: number;
        uDensity: number;
        uSpeed: number;
        uStrength: number;
        uTime: number;
        uFrequency: number;
        wireframe: boolean;
    };
})[];

declare function formatUrlString(urlString: any): any;

export { type EnvironmentPresetT, type GradientT, type LightTypeT, type LightsT, type MeshT, type Position, type Rotation, ShaderGradient, ShaderGradientCanvas, type ShaderGradientType, type animateT, formatUrlString, initialActivePreset, presets, presetsArray, type typeT, useShaderGradientCanvasContext };
